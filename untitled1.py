# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Kuyuqu4OBjigi_Mvt6guWKUQdvQtMwup
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
sns.set_style('darkgrid')



!git clone "https://github.com/GeeksforgeeksDS/21-Days-21-Projects-Dataset"

netflix_df = pd.read_csv('/content/21-Days-21-Projects-Dataset/Datasets/netflix_titles.csv')
netflix_df.head()

netflix_df.info()

netflix_df['director']=netflix_df['director'].fillna('Unknown')
netflix_df['cast']=netflix_df['cast'].fillna('Unknown')

mode_country=netflix_df['country'].mode()[0]
netflix_df['country']=netflix_df['country'].fillna(mode_country)

netflix_df.dropna(subset=['date_added','rating'],inplace=True)

netflix_df['date_added']=pd.to_datetime(netflix_df['date_added'],format='mixed',dayfirst=False)

netflix_df['year_added']=netflix_df['date_added'].dt.year
netflix_df['month_added']=netflix_df['date_added'].dt.month

print("Missing values after cleaning:")
print(netflix_df.isnull().sum())
print("\nData types after transformation:")
print(netflix_df.dtypes)

plt.figure(figsize=(8,6))
type_counts=netflix_df['type'].value_counts()
plt.pie(type_counts,labels=type_counts.index,autopct='%1.1f%%',startangle=90,colors=['#e60023', '#221f1f'])
plt.title('Distribution of Movie and TV Shows')
plt.show()

"""####how has content been added over time?"""

content_over_time = netflix_df.groupby(['year_added', 'type']).size().unstack().fillna(0)

plt.figure(figsize=(14, 8))
content_over_time.plot(kind='line', marker='o', figsize=(14, 8))
plt.title('Content Added to Netflix Over the Years (by Type)')
plt.xlabel('Year Added')
plt.ylabel('Number of Titles Added')
plt.legend(title='Content Type')
plt.grid(True)
plt.show()

netflix_df.head(2)

"""####what are the most popular genres"""

genres=netflix_df.assign(genre=netflix_df['listed_in'].str.split(', ')).explode('genre')

top_genres_counts=genres['genre'].value_counts().reset_index()
top_genres_counts.columns=['genre','count']
top_genres_counts_plot=top_genres_counts.head(15)
plt.figure(figsize=(10,6))
sns.barplot(y='genre',x='count',data=top_genres_counts_plot,palette='mako',hue='genre',legend=False)
plt.title('Top 15 Genres on Netflix')
plt.xlabel('Count')
plt.ylabel('Genre')
plt.show()

"""what is the distribution of content duration?"""

movies_df=netflix_df[netflix_df['type']=='Movie'].copy()
tv_shows_df=netflix_df[netflix_df['type']=='TV Show'].copy()

movies_df['duration_min']=movies_df['duration'].str.replace(' min','').astype(int)
tv_shows_df['duration_seasons']=tv_shows_df['duration'].str.replace(' Seasons','').str.replace(' Season','').astype(int)

countries=netflix_df.assign(country=netflix_df['country'].str.split(', ')).explode('country')

top_countries_counts=countries['country'].value_counts().reset_index()
top_countries_counts.columns=['country','count']

top_countries_counts_plot = top_countries_counts.head(15)

# Set up the plot
plt.figure(figsize=(12, 10))
sns.barplot(y='country', x='count', data=top_countries_counts_plot, palette='viridis')

# Add titles and labels
plt.title('Top 15 Content Producing Countries on Netflix')
plt.xlabel('Number of Titles')
plt.ylabel('Country')

# Show the plot
plt.tight_layout()
plt.show()

netflix_df.head(2)

plt.figure(figsize=(10,6))
sns.countplot(x='rating',data=netflix_df,order=netflix_df['rating'].value_counts().index,palette='crest',hue='rating',legend=False)
plt.title('Distribution of Ratings on Netflix')
plt.xlabel('Rating')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

netflix_df['age_on_netflix']=netflix_df['year_added']-netflix_df['release_year']
content_age=netflix_df[netflix_df['age_on_netflix']>=0]
plt.figure(figsize=(14,7))
sns.histplot(data=content_age,x='age_on_netflix',bins=50,kde=True)
plt.title('Distribution of Content Age on Netflix')
plt.xlabel('Content Age(Years)')
plt.ylabel('Number of Titles')
plt.show()

top_genres = genres['genre'].value_counts().index[:5]
genres_movies = genres[(genres['type'] == 'Movie') & (genres['genre'].isin(top_genres))].copy()
genres_movies['duration_min'] = genres_movies['duration'].str.replace(' min', '').astype(int)

plt.figure(figsize=(15, 8))
sns.boxplot(data=genres_movies, x='genre', y='duration_min', palette='pastel', hue='genre', legend=False)
plt.title('Movie Duration by Top Genres')
plt.xlabel('Genre')
plt.ylabel('Duration (minutes)')
plt.xticks(rotation=45)
plt.show()

text=' '.join(netflix_df['description'])
wordcloud=WordCloud(width=800,height=400,background_color='black',min_font_size=10).generate(text)
plt.figure(figsize=(15,10))
plt.imshow(wordcloud,interpolation='bilinear')
plt.axis('off')
plt.title('most common words in netflix descriptions',fontsize=20)
plt.show()

"""

> Submission Q1
* How has the distribution of content ratings changed over time?

"""

rating_trend = netflix_df.groupby(['release_year', 'rating']).size().unstack().fillna(0)

rating_trend.plot(kind='area', stacked=True, figsize=(15, 8), colormap='tab20')
plt.title('Netflix Content Ratings Over Time')
plt.xlabel('Release Year')
plt.ylabel('Number of Titles')
plt.legend(title='Rating')
plt.tight_layout()
plt.show()

"""**Submission 2**
 Is there a relationship between content age and its type (Movie vs. TV Show)
"""

df_filtered = netflix_df.dropna(subset=['rating', 'type'])
plt.figure(figsize=(12, 6))
sns.countplot(data=df_filtered, x='rating', hue='type', order=df_filtered['rating'].value_counts().index, palette='Set2')
plt.title('Distribution of Content Ratings by Type (Movie vs. TV Show)')
plt.xlabel('Content Rating')
plt.ylabel('Number of Titles')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""**Submission 3**
an we identify any trends in content production based on the release year vs. the year added to Netflix?

"""

netflix_df['year_added'] = pd.to_datetime(netflix_df['date_added']).dt.year
plt.figure(figsize=(14, 8))
sns.histplot(data=netflix_df, x='release_year', hue='year_added', multiple='stack', palette='mako', bins=30)
plt.title('Release Year vs. Year Added to Netflix')
plt.xlabel('Release Year')
plt.ylabel('Number of Titles')
plt.tight_layout()
plt.show()

"""**Submission 4**
What are the most common word pairs or phrases in content descriptions?
"""

!pip install -q spacy
!python -m spacy download en_core_web_sm

import spacy
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from collections import Counter
from nltk.util import ngrams

nlp = spacy.load("en_core_web_sm")

tokens = []

for desc in netflix_df['description'].dropna().astype(str):
    doc = nlp(desc.lower())
    tokens.extend([token.text for token in doc if token.is_alpha and not token.is_stop])

bigrams = list(ngrams(tokens, 2))
bigram_freq = Counter(bigrams)

bigram_df = pd.DataFrame(bigram_freq.most_common(20), columns=['bigram', 'count'])
bigram_df['phrase'] = bigram_df['bigram'].apply(lambda x: ' '.join(x))

plt.figure(figsize=(12, 6))
sns.barplot(data=bigram_df, x='count', y='phrase', palette='magma')
plt.title('Top 20 Most Common Word Pairs in Netflix Descriptions')
plt.xlabel('Frequency')
plt.ylabel('Phrase')
plt.tight_layout()
plt.show()

"""**submission 5**
Who are the top directors on Netflix?
"""

directors_df = netflix_df.dropna(subset=['director'])

all_directors = directors_df['director'].str.split(',').explode().str.strip()

top_directors = all_directors.value_counts().head(15).reset_index()
top_directors.columns = ['Director', 'Number of Titles']

plt.figure(figsize=(12, 8))
sns.barplot(data=top_directors, x='Number of Titles', y='Director', palette='crest')
plt.title('Top 15 Most Featured Directors on Netflix')
plt.xlabel('Number of Titles')
plt.ylabel('Director')
plt.tight_layout()
plt.show()
-